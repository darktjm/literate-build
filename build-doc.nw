% -*- mode: Noweb; noweb-code-mode: c-mode; -*-
% Build with noweb:
%  notangle -t8 build.nw > makefile
%  make
\documentclass[twoside,english]{article}
\usepackage[letterpaper,rmargin=1.5in,bmargin=1in]{geometry}
%%% latex preamble
\RCS $Id$
\RCS $Revision$
\RCS $Date$
% Override with build.nw's RCS info
\input{build-rcs.tex} %%% doc

%%% requires build
%%% no-ext-ref

\begin{document}

\title{Syntax Highlighting Modular Build System for noweb (Users' Guide)}
\author{Thomas J. Moore}
\input{build-ver.tex} %%% doc
\maketitle

\tableofcontents

\section{Introduction}

\input{literate-intro.tex} %%% doc

The code in [[build.nw]] provides the following features to help with
these problems:

\begin{itemize}
\item PDF or HTML output from \LaTeX{} and extended noweb input
\item Optional Unicode support using [[xelatex]] instead of [[pdflatex]]
\item Automatic merging of multiple noweb source files for tangling and
optionally for weaving
\item Controlled merge order to support extensions (modules) for
[[build.nw]]
\item Syntax-highlighted code in multiple source languages (including
background color and spanning pages in PDF output)
\item Noweb source (and other optional extras) attached to the PDF and
HTML output, so that only a single file needs to be distributed
\item Parameterized noweb code chunks, for languages without
parameterized macros or improved [[#line]] support for C
\item Automatic prototype generation for easier out-of-order C
\item Support for re-inserting documentation in separate sections or
documents to keep user documentation in synch
\item Support for re-inserting tangled code chunks into separate
sections or documents
\item Support for inserting formatted C prototypes for hand-written
API documentation
\end{itemize}

It does not help with some of the other common issues:

\begin{itemize}
\item It does not detect the language of chunks automatically;
instead, a command is provided to change the language for subsequent
chunks.
\item It relies on external highlighters which have various quirks,
especially when formatting incomplete code chunks.
\item It provides no support for automatic identifier indexing, and
would probably fail miserably if links were added within the code
chunks.  Identifier indexing requires tangling and partial compiling
for anything more complex than short, simple demo code, anyway.
\item It conforms to my aesthetics; in particular, a lot of effort was
put into making things compact.  I prefer every page to be as full as
possible.
\item It does not support [[latex2html]], and the TeX4ht support is
probably broken with anything recent; this also means that multi-file
HTML output is not possible.  Even if TeX4ht support does work, there
is no target to conveniently ship the HTML file and all its images and
other references in one go.
\end{itemize}

\section{Building packages based on \texttt{build.nw}}

Building from scratch has a number of system dependencies:

\begin{itemize}
\item GNU (\url{http://www.gnu.org}) make, or a clone.  In particular,
Daniel Pfeiffer's makepp (\url{http://makepp.sourceforge.net}) works
as well.
\item Some standard UNIX tools:  GNU sed, POSIX awk, grep, cat, and
others.  The only non-standard tool is tac, which can be replaced (see
makefile.config).
\item Perl.  Any version will probably do.
\item Norman Ramsey's noweb
(\url{http://www.eecs.harvard.edu/~nr/noweb/}).  If you wish to develop
code using this system, you will need to understand noweb as well
(it's not difficult).  If you don't want to generate documentation,
you can replace the noroots command using makefile.config; a
replacement for notangle is given below.
\item For PDF output, you will need a good, working \LaTeX{}
installation.  There are a number of bundles which include almost
everything you'll ever need.  In particular, the framed package must
be up-to-date.  Note that XeTeX is supported as well.  For PDF
syntax highlighting, the listings package may be used.
\item For HTML output, you can either use the simple \LaTeX{}-to-HTML
converter included with noweb, or you can use tex4ht
(\url{http://www.cse.ohio-state.edu/~gurari/TeX4ht/}).
\item For syntax highlighting in HTML using noweb's \LaTeX{}-to-HTML
converter, or if you are dissatisfied with the listings package, you
will need a separate highlighter command.  Currently, GNU
source-highlight (\url{http://www.gnu.org/software/src-highlite/})
and Andr\'e Simon's highlight program (\url{http://www.andre-simon.de})
are supported.  For the former, only recent versions have been tested.
For the latter, version 2 or version 3 is supported.
\end{itemize}

You may have been provided with a source tarball, in which case that
should eliminate the need for noweb, Perl, awk, GNU sed, and others.
You simply need to view and edit \texttt{makefile.config}, and then
type \texttt{make} or \texttt{make~install}.

\input{build-doc.tex} %%% doc

The following are the build parameters for \texttt{build.nw} itself:

\input{makefile.config.tex} % make

\section{Creating packages based on \texttt{build.nw}}

\input{build-usage-1.tex} %%% doc
Instructions for the latter are in the previous section. A summary should
be included in every document using this system as well, using the
following:

\input{build-usage.tex} %%% doc

See the previous section for prerequisites; the same applies to
development as well.  Better yet, read the original source for
comments on what is needed, and why.

\end{document}
